// GENERATED BY UNITY. REMOVE THIS COMMENT TO PREVENT OVERWRITING WHEN EXPORTING AGAIN

buildscript {
    repositories {
        mavenCentral()
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.0'
}
}

allprojects {
    repositories {
        mavenCentral()
        google()
        jcenter()
        flatDir {
            dirs 'libs'
        }
    }
}

apply plugin: 'com.android.application'


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation files('libs/XInstall_V1.1.9.aar')
    //okhttp网络请求
    api 'com.squareup.okhttp3:okhttp:4.2.2'
    //微信登录SDK
    api 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:5.3.1'
}

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.3'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 30
        applicationId 'com.bz.bzdz'
        ndk {
            abiFilters 'armeabi-v7a', 'x86'
        }
        versionCode 2
        versionName '1.0.3'
    }

    lintOptions {
        abortOnError false
    }

    aaptOptions {
        noCompress = ['.unity3d', '.ress', '.resource', '.obb', 'activity_atlas.unity3d.zip', 'activity_fui.unity3d.zip', 'bairen_atlas.unity3d.zip', 'bairen_fui.unity3d.zip', 'biaoqing_atlas.unity3d.zip', 'biaoqing_fui.unity3d.zip', 'city.unity3d.zip', 'competition_atlas.unity3d.zip', 'competition_fui.unity3d.zip', 'dragonbones.unity3d.zip', 'extensionsystem2_atlas.unity3d.zip', 'extensionsystem2_fui.unity3d.zip', 'extensionsystem_atlas.unity3d.zip', 'extensionsystem_fui.unity3d.zip', 'files.txt', 'gamehall_atlas.unity3d.zip', 'gamehall_fui.unity3d.zip', 'hall_atlas.unity3d.zip', 'hall_fui.unity3d.zip', 'lua.unity3d.zip', 'lua_cjson.unity3d.zip', 'lua_controller.unity3d.zip', 'lua_controller_bairen.unity3d.zip', 'lua_controller_dezhouniuzai.unity3d.zip', 'lua_controller_duobaoqibin.unity3d.zip', 'lua_controller_gamehall.unity3d.zip', 'lua_controller_hall.unity3d.zip', 'lua_controller_login.unity3d.zip', 'lua_controller_texas.unity3d.zip', 'lua_jit.unity3d.zip', 'lua_lpeg.unity3d.zip', 'lua_misc.unity3d.zip', 'lua_net.unity3d.zip', 'lua_protobuf.unity3d.zip', 'lua_socket.unity3d.zip', 'lua_system.unity3d.zip', 'lua_system_injection.unity3d.zip', 'lua_system_reflection.unity3d.zip', 'lua_unityengine.unity3d.zip', 'luckytable_atlas.unity3d.zip', 'luckytable_fui.unity3d.zip', 'newbgactivity_atlas.unity3d.zip', 'newbgactivity_fui.unity3d.zip', 'newbgbisai_atlas.unity3d.zip', 'newbgbisai_fui.unity3d.zip', 'newbgdzpk1_atlas.unity3d.zip', 'newbgdzpk1_fui.unity3d.zip', 'newbgdzpk2_atlas.unity3d.zip', 'newbgdzpk2_fui.unity3d.zip', 'newgamebairen_atlas.unity3d.zip', 'newgamebairen_fui.unity3d.zip', 'newgamebg_atlas.unity3d.zip', 'newgamebg_fui.unity3d.zip', 'newgamedznz_atlas.unity3d.zip', 'newgamedznz_fui.unity3d.zip', 'niuzai_atlas.unity3d.zip', 'niuzai_fui.unity3d.zip', 'poker_atlas.unity3d.zip', 'poker_fui.unity3d.zip', 'share_atlas.unity3d.zip', 'share_fui.unity3d.zip', 'shop_atlas.unity3d.zip', 'shop_fui.unity3d.zip', 'sound_bgm.unity3d.zip', 'sound_daoju.unity3d.zip', 'sound_duanyu_ptm.unity3d.zip', 'sound_duanyu_ptw.unity3d.zip', 'sound_jiaohu.unity3d.zip', 'spine.unity3d.zip', 'spine_biankuang.unity3d.zip', 'spine_bq.unity3d.zip', 'spine_bq_vip.unity3d.zip', 'spine_caishen.unity3d.zip', 'spine_daoju.unity3d.zip', 'spine_duobao.unity3d.zip', 'spine_dzniuzai.unity3d.zip', 'spine_dzniuzai_images.unity3d.zip', 'spine_huodong.unity3d.zip', 'spine_jinbi.unity3d.zip', 'spine_longhudou.unity3d.zip', 'spine_nvheguan.unity3d.zip', 'streamingassets.zip', 'task_atlas.unity3d.zip', 'task_fui.unity3d.zip', 'texas_atlas.unity3d.zip', 'texas_fui.unity3d.zip']
    }

    signingConfigs {
        release {
            storeFile file('D:/qipai_002/qipai_002/SVN/U3DClient/null_code_hub-bzdz_u3d-master/bzdz_u3d')
            storePassword ''
            keyAlias 'bz2'
            keyPassword ''
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'
            jniDebuggable true
        }
        release {
            minifyEnabled false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        doNotStrip '*/armeabi-v7a/*.so'
        doNotStrip '*/x86/*.so'
    }

    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = false
        }
        abi {
            enableSplit = true
        }
    }
}
