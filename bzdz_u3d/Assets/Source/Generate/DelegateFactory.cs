//this source code was auto-generated by tolua#, do not modify it
using System;
using System.Collections.Generic;
using LuaInterface;

public class DelegateFactory
{
	public delegate Delegate DelegateCreate(LuaFunction func, LuaTable self, bool flag);
	public static Dictionary<Type, DelegateCreate> dict = new Dictionary<Type, DelegateCreate>();
	static DelegateFactory factory = new DelegateFactory();

	public static void Init()
	{
		Register();
	}

	public static void Register()
	{
		dict.Clear();
		dict.Add(typeof(System.Action), factory.System_Action);
		dict.Add(typeof(UnityEngine.Events.UnityAction), factory.UnityEngine_Events_UnityAction);
		dict.Add(typeof(System.Predicate<int>), factory.System_Predicate_int);
		dict.Add(typeof(System.Action<int>), factory.System_Action_int);
		dict.Add(typeof(System.Comparison<int>), factory.System_Comparison_int);
		dict.Add(typeof(System.Func<int,int>), factory.System_Func_int_int);
		dict.Add(typeof(UnityEngine.Camera.CameraCallback), factory.UnityEngine_Camera_CameraCallback);
		dict.Add(typeof(UnityEngine.Application.AdvertisingIdentifierCallback), factory.UnityEngine_Application_AdvertisingIdentifierCallback);
		dict.Add(typeof(UnityEngine.Application.LowMemoryCallback), factory.UnityEngine_Application_LowMemoryCallback);
		dict.Add(typeof(UnityEngine.Application.LogCallback), factory.UnityEngine_Application_LogCallback);
		dict.Add(typeof(System.Action<bool>), factory.System_Action_bool);
		dict.Add(typeof(System.Func<bool>), factory.System_Func_bool);
		dict.Add(typeof(UnityEngine.AudioClip.PCMReaderCallback), factory.UnityEngine_AudioClip_PCMReaderCallback);
		dict.Add(typeof(UnityEngine.AudioClip.PCMSetPositionCallback), factory.UnityEngine_AudioClip_PCMSetPositionCallback);
		dict.Add(typeof(System.Action<UnityEngine.AsyncOperation>), factory.System_Action_UnityEngine_AsyncOperation);
		dict.Add(typeof(FairyGUI.EventCallback1), factory.FairyGUI_EventCallback1);
		dict.Add(typeof(FairyGUI.EventCallback0), factory.FairyGUI_EventCallback0);
		dict.Add(typeof(FairyGUI.ListItemRenderer), factory.FairyGUI_ListItemRenderer);
		dict.Add(typeof(FairyGUI.ListItemProvider), factory.FairyGUI_ListItemProvider);
		dict.Add(typeof(FairyGUI.PlayCompleteCallback), factory.FairyGUI_PlayCompleteCallback);
		dict.Add(typeof(FairyGUI.TransitionHook), factory.FairyGUI_TransitionHook);
		dict.Add(typeof(FairyGUI.UIPackage.LoadResource), factory.FairyGUI_UIPackage_LoadResource);
		dict.Add(typeof(FairyGUI.UIPackage.CreateObjectCallback), factory.FairyGUI_UIPackage_CreateObjectCallback);
		dict.Add(typeof(FairyGUI.GObjectPool.InitCallbackDelegate), factory.FairyGUI_GObjectPool_InitCallbackDelegate);
		dict.Add(typeof(FairyGUI.TimerCallback), factory.FairyGUI_TimerCallback);
		dict.Add(typeof(FairyGUI.GTweenCallback), factory.FairyGUI_GTweenCallback);
		dict.Add(typeof(FairyGUI.GTweenCallback1), factory.FairyGUI_GTweenCallback1);
		dict.Add(typeof(FairyGUI.UIObjectFactory.GComponentCreator), factory.FairyGUI_UIObjectFactory_GComponentCreator);
		dict.Add(typeof(FairyGUI.UIObjectFactory.GLoaderCreator), factory.FairyGUI_UIObjectFactory_GLoaderCreator);
		dict.Add(typeof(LTDescr.EaseTypeDelegate), factory.LTDescr_EaseTypeDelegate);
		dict.Add(typeof(LTDescr.ActionMethodDelegate), factory.LTDescr_ActionMethodDelegate);
		dict.Add(typeof(System.Action<object>), factory.System_Action_object);
		dict.Add(typeof(System.Action<float>), factory.System_Action_float);
		dict.Add(typeof(System.Action<float,float>), factory.System_Action_float_float);
		dict.Add(typeof(System.Action<float,object>), factory.System_Action_float_object);
		dict.Add(typeof(System.Action<UnityEngine.Vector2>), factory.System_Action_UnityEngine_Vector2);
		dict.Add(typeof(System.Action<UnityEngine.Vector3>), factory.System_Action_UnityEngine_Vector3);
		dict.Add(typeof(System.Action<UnityEngine.Color>), factory.System_Action_UnityEngine_Color);
		dict.Add(typeof(System.Action<UnityEngine.Color,object>), factory.System_Action_UnityEngine_Color_object);
		dict.Add(typeof(System.Action<UnityEngine.Vector3,object>), factory.System_Action_UnityEngine_Vector3_object);
		dict.Add(typeof(System.Action<LTEvent>), factory.System_Action_LTEvent);
		dict.Add(typeof(System.Action<string[]>), factory.System_Action_strings);
		dict.Add(typeof(DragonBones.ListenerDelegate<DragonBones.EventObject>), factory.DragonBones_ListenerDelegate_DragonBones_EventObject);
		dict.Add(typeof(Spine.Unity.UpdateBonesDelegate), factory.Spine_Unity_UpdateBonesDelegate);
		dict.Add(typeof(Spine.Unity.SkeletonRenderer.InstructionDelegate), factory.Spine_Unity_SkeletonRenderer_InstructionDelegate);
		dict.Add(typeof(Spine.Unity.MeshGeneratorDelegate), factory.Spine_Unity_MeshGeneratorDelegate);
		dict.Add(typeof(Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate), factory.Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate);
		dict.Add(typeof(System.Func<string,bool>), factory.System_Func_string_bool);
		dict.Add(typeof(Spine.AnimationState.TrackEntryDelegate), factory.Spine_AnimationState_TrackEntryDelegate);
		dict.Add(typeof(Spine.AnimationState.TrackEntryEventDelegate), factory.Spine_AnimationState_TrackEntryEventDelegate);

		DelegateTraits<System.Action>.Init(factory.System_Action);
		DelegateTraits<UnityEngine.Events.UnityAction>.Init(factory.UnityEngine_Events_UnityAction);
		DelegateTraits<System.Predicate<int>>.Init(factory.System_Predicate_int);
		DelegateTraits<System.Action<int>>.Init(factory.System_Action_int);
		DelegateTraits<System.Comparison<int>>.Init(factory.System_Comparison_int);
		DelegateTraits<System.Func<int,int>>.Init(factory.System_Func_int_int);
		DelegateTraits<UnityEngine.Camera.CameraCallback>.Init(factory.UnityEngine_Camera_CameraCallback);
		DelegateTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Init(factory.UnityEngine_Application_AdvertisingIdentifierCallback);
		DelegateTraits<UnityEngine.Application.LowMemoryCallback>.Init(factory.UnityEngine_Application_LowMemoryCallback);
		DelegateTraits<UnityEngine.Application.LogCallback>.Init(factory.UnityEngine_Application_LogCallback);
		DelegateTraits<System.Action<bool>>.Init(factory.System_Action_bool);
		DelegateTraits<System.Func<bool>>.Init(factory.System_Func_bool);
		DelegateTraits<UnityEngine.AudioClip.PCMReaderCallback>.Init(factory.UnityEngine_AudioClip_PCMReaderCallback);
		DelegateTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Init(factory.UnityEngine_AudioClip_PCMSetPositionCallback);
		DelegateTraits<System.Action<UnityEngine.AsyncOperation>>.Init(factory.System_Action_UnityEngine_AsyncOperation);
		DelegateTraits<FairyGUI.EventCallback1>.Init(factory.FairyGUI_EventCallback1);
		DelegateTraits<FairyGUI.EventCallback0>.Init(factory.FairyGUI_EventCallback0);
		DelegateTraits<FairyGUI.ListItemRenderer>.Init(factory.FairyGUI_ListItemRenderer);
		DelegateTraits<FairyGUI.ListItemProvider>.Init(factory.FairyGUI_ListItemProvider);
		DelegateTraits<FairyGUI.PlayCompleteCallback>.Init(factory.FairyGUI_PlayCompleteCallback);
		DelegateTraits<FairyGUI.TransitionHook>.Init(factory.FairyGUI_TransitionHook);
		DelegateTraits<FairyGUI.UIPackage.LoadResource>.Init(factory.FairyGUI_UIPackage_LoadResource);
		DelegateTraits<FairyGUI.UIPackage.CreateObjectCallback>.Init(factory.FairyGUI_UIPackage_CreateObjectCallback);
		DelegateTraits<FairyGUI.GObjectPool.InitCallbackDelegate>.Init(factory.FairyGUI_GObjectPool_InitCallbackDelegate);
		DelegateTraits<FairyGUI.TimerCallback>.Init(factory.FairyGUI_TimerCallback);
		DelegateTraits<FairyGUI.GTweenCallback>.Init(factory.FairyGUI_GTweenCallback);
		DelegateTraits<FairyGUI.GTweenCallback1>.Init(factory.FairyGUI_GTweenCallback1);
		DelegateTraits<FairyGUI.UIObjectFactory.GComponentCreator>.Init(factory.FairyGUI_UIObjectFactory_GComponentCreator);
		DelegateTraits<FairyGUI.UIObjectFactory.GLoaderCreator>.Init(factory.FairyGUI_UIObjectFactory_GLoaderCreator);
		DelegateTraits<LTDescr.EaseTypeDelegate>.Init(factory.LTDescr_EaseTypeDelegate);
		DelegateTraits<LTDescr.ActionMethodDelegate>.Init(factory.LTDescr_ActionMethodDelegate);
		DelegateTraits<System.Action<object>>.Init(factory.System_Action_object);
		DelegateTraits<System.Action<float>>.Init(factory.System_Action_float);
		DelegateTraits<System.Action<float,float>>.Init(factory.System_Action_float_float);
		DelegateTraits<System.Action<float,object>>.Init(factory.System_Action_float_object);
		DelegateTraits<System.Action<UnityEngine.Vector2>>.Init(factory.System_Action_UnityEngine_Vector2);
		DelegateTraits<System.Action<UnityEngine.Vector3>>.Init(factory.System_Action_UnityEngine_Vector3);
		DelegateTraits<System.Action<UnityEngine.Color>>.Init(factory.System_Action_UnityEngine_Color);
		DelegateTraits<System.Action<UnityEngine.Color,object>>.Init(factory.System_Action_UnityEngine_Color_object);
		DelegateTraits<System.Action<UnityEngine.Vector3,object>>.Init(factory.System_Action_UnityEngine_Vector3_object);
		DelegateTraits<System.Action<LTEvent>>.Init(factory.System_Action_LTEvent);
		DelegateTraits<System.Action<string[]>>.Init(factory.System_Action_strings);
		DelegateTraits<DragonBones.ListenerDelegate<DragonBones.EventObject>>.Init(factory.DragonBones_ListenerDelegate_DragonBones_EventObject);
		DelegateTraits<Spine.Unity.UpdateBonesDelegate>.Init(factory.Spine_Unity_UpdateBonesDelegate);
		DelegateTraits<Spine.Unity.SkeletonRenderer.InstructionDelegate>.Init(factory.Spine_Unity_SkeletonRenderer_InstructionDelegate);
		DelegateTraits<Spine.Unity.MeshGeneratorDelegate>.Init(factory.Spine_Unity_MeshGeneratorDelegate);
		DelegateTraits<Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate>.Init(factory.Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate);
		DelegateTraits<System.Func<string,bool>>.Init(factory.System_Func_string_bool);
		DelegateTraits<Spine.AnimationState.TrackEntryDelegate>.Init(factory.Spine_AnimationState_TrackEntryDelegate);
		DelegateTraits<Spine.AnimationState.TrackEntryEventDelegate>.Init(factory.Spine_AnimationState_TrackEntryEventDelegate);

		TypeTraits<System.Action>.Init(factory.Check_System_Action);
		TypeTraits<UnityEngine.Events.UnityAction>.Init(factory.Check_UnityEngine_Events_UnityAction);
		TypeTraits<System.Predicate<int>>.Init(factory.Check_System_Predicate_int);
		TypeTraits<System.Action<int>>.Init(factory.Check_System_Action_int);
		TypeTraits<System.Comparison<int>>.Init(factory.Check_System_Comparison_int);
		TypeTraits<System.Func<int,int>>.Init(factory.Check_System_Func_int_int);
		TypeTraits<UnityEngine.Camera.CameraCallback>.Init(factory.Check_UnityEngine_Camera_CameraCallback);
		TypeTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Init(factory.Check_UnityEngine_Application_AdvertisingIdentifierCallback);
		TypeTraits<UnityEngine.Application.LowMemoryCallback>.Init(factory.Check_UnityEngine_Application_LowMemoryCallback);
		TypeTraits<UnityEngine.Application.LogCallback>.Init(factory.Check_UnityEngine_Application_LogCallback);
		TypeTraits<System.Action<bool>>.Init(factory.Check_System_Action_bool);
		TypeTraits<System.Func<bool>>.Init(factory.Check_System_Func_bool);
		TypeTraits<UnityEngine.AudioClip.PCMReaderCallback>.Init(factory.Check_UnityEngine_AudioClip_PCMReaderCallback);
		TypeTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Init(factory.Check_UnityEngine_AudioClip_PCMSetPositionCallback);
		TypeTraits<System.Action<UnityEngine.AsyncOperation>>.Init(factory.Check_System_Action_UnityEngine_AsyncOperation);
		TypeTraits<FairyGUI.EventCallback1>.Init(factory.Check_FairyGUI_EventCallback1);
		TypeTraits<FairyGUI.EventCallback0>.Init(factory.Check_FairyGUI_EventCallback0);
		TypeTraits<FairyGUI.ListItemRenderer>.Init(factory.Check_FairyGUI_ListItemRenderer);
		TypeTraits<FairyGUI.ListItemProvider>.Init(factory.Check_FairyGUI_ListItemProvider);
		TypeTraits<FairyGUI.PlayCompleteCallback>.Init(factory.Check_FairyGUI_PlayCompleteCallback);
		TypeTraits<FairyGUI.TransitionHook>.Init(factory.Check_FairyGUI_TransitionHook);
		TypeTraits<FairyGUI.UIPackage.LoadResource>.Init(factory.Check_FairyGUI_UIPackage_LoadResource);
		TypeTraits<FairyGUI.UIPackage.CreateObjectCallback>.Init(factory.Check_FairyGUI_UIPackage_CreateObjectCallback);
		TypeTraits<FairyGUI.GObjectPool.InitCallbackDelegate>.Init(factory.Check_FairyGUI_GObjectPool_InitCallbackDelegate);
		TypeTraits<FairyGUI.TimerCallback>.Init(factory.Check_FairyGUI_TimerCallback);
		TypeTraits<FairyGUI.GTweenCallback>.Init(factory.Check_FairyGUI_GTweenCallback);
		TypeTraits<FairyGUI.GTweenCallback1>.Init(factory.Check_FairyGUI_GTweenCallback1);
		TypeTraits<FairyGUI.UIObjectFactory.GComponentCreator>.Init(factory.Check_FairyGUI_UIObjectFactory_GComponentCreator);
		TypeTraits<FairyGUI.UIObjectFactory.GLoaderCreator>.Init(factory.Check_FairyGUI_UIObjectFactory_GLoaderCreator);
		TypeTraits<LTDescr.EaseTypeDelegate>.Init(factory.Check_LTDescr_EaseTypeDelegate);
		TypeTraits<LTDescr.ActionMethodDelegate>.Init(factory.Check_LTDescr_ActionMethodDelegate);
		TypeTraits<System.Action<object>>.Init(factory.Check_System_Action_object);
		TypeTraits<System.Action<float>>.Init(factory.Check_System_Action_float);
		TypeTraits<System.Action<float,float>>.Init(factory.Check_System_Action_float_float);
		TypeTraits<System.Action<float,object>>.Init(factory.Check_System_Action_float_object);
		TypeTraits<System.Action<UnityEngine.Vector2>>.Init(factory.Check_System_Action_UnityEngine_Vector2);
		TypeTraits<System.Action<UnityEngine.Vector3>>.Init(factory.Check_System_Action_UnityEngine_Vector3);
		TypeTraits<System.Action<UnityEngine.Color>>.Init(factory.Check_System_Action_UnityEngine_Color);
		TypeTraits<System.Action<UnityEngine.Color,object>>.Init(factory.Check_System_Action_UnityEngine_Color_object);
		TypeTraits<System.Action<UnityEngine.Vector3,object>>.Init(factory.Check_System_Action_UnityEngine_Vector3_object);
		TypeTraits<System.Action<LTEvent>>.Init(factory.Check_System_Action_LTEvent);
		TypeTraits<System.Action<string[]>>.Init(factory.Check_System_Action_strings);
		TypeTraits<DragonBones.ListenerDelegate<DragonBones.EventObject>>.Init(factory.Check_DragonBones_ListenerDelegate_DragonBones_EventObject);
		TypeTraits<Spine.Unity.UpdateBonesDelegate>.Init(factory.Check_Spine_Unity_UpdateBonesDelegate);
		TypeTraits<Spine.Unity.SkeletonRenderer.InstructionDelegate>.Init(factory.Check_Spine_Unity_SkeletonRenderer_InstructionDelegate);
		TypeTraits<Spine.Unity.MeshGeneratorDelegate>.Init(factory.Check_Spine_Unity_MeshGeneratorDelegate);
		TypeTraits<Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate>.Init(factory.Check_Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate);
		TypeTraits<System.Func<string,bool>>.Init(factory.Check_System_Func_string_bool);
		TypeTraits<Spine.AnimationState.TrackEntryDelegate>.Init(factory.Check_Spine_AnimationState_TrackEntryDelegate);
		TypeTraits<Spine.AnimationState.TrackEntryEventDelegate>.Init(factory.Check_Spine_AnimationState_TrackEntryEventDelegate);

		StackTraits<System.Action>.Push = factory.Push_System_Action;
		StackTraits<UnityEngine.Events.UnityAction>.Push = factory.Push_UnityEngine_Events_UnityAction;
		StackTraits<System.Predicate<int>>.Push = factory.Push_System_Predicate_int;
		StackTraits<System.Action<int>>.Push = factory.Push_System_Action_int;
		StackTraits<System.Comparison<int>>.Push = factory.Push_System_Comparison_int;
		StackTraits<System.Func<int,int>>.Push = factory.Push_System_Func_int_int;
		StackTraits<UnityEngine.Camera.CameraCallback>.Push = factory.Push_UnityEngine_Camera_CameraCallback;
		StackTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Push = factory.Push_UnityEngine_Application_AdvertisingIdentifierCallback;
		StackTraits<UnityEngine.Application.LowMemoryCallback>.Push = factory.Push_UnityEngine_Application_LowMemoryCallback;
		StackTraits<UnityEngine.Application.LogCallback>.Push = factory.Push_UnityEngine_Application_LogCallback;
		StackTraits<System.Action<bool>>.Push = factory.Push_System_Action_bool;
		StackTraits<System.Func<bool>>.Push = factory.Push_System_Func_bool;
		StackTraits<UnityEngine.AudioClip.PCMReaderCallback>.Push = factory.Push_UnityEngine_AudioClip_PCMReaderCallback;
		StackTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Push = factory.Push_UnityEngine_AudioClip_PCMSetPositionCallback;
		StackTraits<System.Action<UnityEngine.AsyncOperation>>.Push = factory.Push_System_Action_UnityEngine_AsyncOperation;
		StackTraits<FairyGUI.EventCallback1>.Push = factory.Push_FairyGUI_EventCallback1;
		StackTraits<FairyGUI.EventCallback0>.Push = factory.Push_FairyGUI_EventCallback0;
		StackTraits<FairyGUI.ListItemRenderer>.Push = factory.Push_FairyGUI_ListItemRenderer;
		StackTraits<FairyGUI.ListItemProvider>.Push = factory.Push_FairyGUI_ListItemProvider;
		StackTraits<FairyGUI.PlayCompleteCallback>.Push = factory.Push_FairyGUI_PlayCompleteCallback;
		StackTraits<FairyGUI.TransitionHook>.Push = factory.Push_FairyGUI_TransitionHook;
		StackTraits<FairyGUI.UIPackage.LoadResource>.Push = factory.Push_FairyGUI_UIPackage_LoadResource;
		StackTraits<FairyGUI.UIPackage.CreateObjectCallback>.Push = factory.Push_FairyGUI_UIPackage_CreateObjectCallback;
		StackTraits<FairyGUI.GObjectPool.InitCallbackDelegate>.Push = factory.Push_FairyGUI_GObjectPool_InitCallbackDelegate;
		StackTraits<FairyGUI.TimerCallback>.Push = factory.Push_FairyGUI_TimerCallback;
		StackTraits<FairyGUI.GTweenCallback>.Push = factory.Push_FairyGUI_GTweenCallback;
		StackTraits<FairyGUI.GTweenCallback1>.Push = factory.Push_FairyGUI_GTweenCallback1;
		StackTraits<FairyGUI.UIObjectFactory.GComponentCreator>.Push = factory.Push_FairyGUI_UIObjectFactory_GComponentCreator;
		StackTraits<FairyGUI.UIObjectFactory.GLoaderCreator>.Push = factory.Push_FairyGUI_UIObjectFactory_GLoaderCreator;
		StackTraits<LTDescr.EaseTypeDelegate>.Push = factory.Push_LTDescr_EaseTypeDelegate;
		StackTraits<LTDescr.ActionMethodDelegate>.Push = factory.Push_LTDescr_ActionMethodDelegate;
		StackTraits<System.Action<object>>.Push = factory.Push_System_Action_object;
		StackTraits<System.Action<float>>.Push = factory.Push_System_Action_float;
		StackTraits<System.Action<float,float>>.Push = factory.Push_System_Action_float_float;
		StackTraits<System.Action<float,object>>.Push = factory.Push_System_Action_float_object;
		StackTraits<System.Action<UnityEngine.Vector2>>.Push = factory.Push_System_Action_UnityEngine_Vector2;
		StackTraits<System.Action<UnityEngine.Vector3>>.Push = factory.Push_System_Action_UnityEngine_Vector3;
		StackTraits<System.Action<UnityEngine.Color>>.Push = factory.Push_System_Action_UnityEngine_Color;
		StackTraits<System.Action<UnityEngine.Color,object>>.Push = factory.Push_System_Action_UnityEngine_Color_object;
		StackTraits<System.Action<UnityEngine.Vector3,object>>.Push = factory.Push_System_Action_UnityEngine_Vector3_object;
		StackTraits<System.Action<LTEvent>>.Push = factory.Push_System_Action_LTEvent;
		StackTraits<System.Action<string[]>>.Push = factory.Push_System_Action_strings;
		StackTraits<DragonBones.ListenerDelegate<DragonBones.EventObject>>.Push = factory.Push_DragonBones_ListenerDelegate_DragonBones_EventObject;
		StackTraits<Spine.Unity.UpdateBonesDelegate>.Push = factory.Push_Spine_Unity_UpdateBonesDelegate;
		StackTraits<Spine.Unity.SkeletonRenderer.InstructionDelegate>.Push = factory.Push_Spine_Unity_SkeletonRenderer_InstructionDelegate;
		StackTraits<Spine.Unity.MeshGeneratorDelegate>.Push = factory.Push_Spine_Unity_MeshGeneratorDelegate;
		StackTraits<Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate>.Push = factory.Push_Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate;
		StackTraits<System.Func<string,bool>>.Push = factory.Push_System_Func_string_bool;
		StackTraits<Spine.AnimationState.TrackEntryDelegate>.Push = factory.Push_Spine_AnimationState_TrackEntryDelegate;
		StackTraits<Spine.AnimationState.TrackEntryEventDelegate>.Push = factory.Push_Spine_AnimationState_TrackEntryEventDelegate;
	}
    
    public static Delegate CreateDelegate(Type t, LuaFunction func = null)
    {
        DelegateCreate Create = null;

        if (!dict.TryGetValue(t, out Create))
        {
            throw new LuaException(string.Format("Delegate {0} not register", LuaMisc.GetTypeName(t)));            
        }

        if (func != null)
        {
            LuaState state = func.GetLuaState();
            LuaDelegate target = state.GetLuaDelegate(func);
            
            if (target != null)
            {
                return Delegate.CreateDelegate(t, target, target.method);
            }  
            else
            {
                Delegate d = Create(func, null, false);
                target = d.Target as LuaDelegate;
                state.AddLuaDelegate(target, func);
                return d;
            }       
        }

        return Create(null, null, false);        
    }
    
    public static Delegate CreateDelegate(Type t, LuaFunction func, LuaTable self)
    {
        DelegateCreate Create = null;

        if (!dict.TryGetValue(t, out Create))
        {
            throw new LuaException(string.Format("Delegate {0} not register", LuaMisc.GetTypeName(t)));
        }

        if (func != null)
        {
            LuaState state = func.GetLuaState();
            LuaDelegate target = state.GetLuaDelegate(func, self);

            if (target != null)
            {
                return Delegate.CreateDelegate(t, target, target.method);
            }
            else
            {
                Delegate d = Create(func, self, true);
                target = d.Target as LuaDelegate;
                state.AddLuaDelegate(target, func, self);
                return d;
            }
        }

        return Create(null, null, true);
    }
    
    public static Delegate RemoveDelegate(Delegate obj, LuaFunction func)
    {
        LuaState state = func.GetLuaState();
        Delegate[] ds = obj.GetInvocationList();

        for (int i = 0; i < ds.Length; i++)
        {
            LuaDelegate ld = ds[i].Target as LuaDelegate;

            if (ld != null && ld.func == func)
            {
                obj = Delegate.Remove(obj, ds[i]);
                state.DelayDispose(ld.func);
                break;
            }
        }

        return obj;
    }
    
    public static Delegate RemoveDelegate(Delegate obj, Delegate dg)
    {
        LuaDelegate remove = dg.Target as LuaDelegate;

        if (remove == null)
        {
            obj = Delegate.Remove(obj, dg);
            return obj;
        }

        LuaState state = remove.func.GetLuaState();
        Delegate[] ds = obj.GetInvocationList();        

        for (int i = 0; i < ds.Length; i++)
        {
            LuaDelegate ld = ds[i].Target as LuaDelegate;

            if (ld != null && ld == remove)
            {
                obj = Delegate.Remove(obj, ds[i]);
                state.DelayDispose(ld.func);
                state.DelayDispose(ld.self);
                break;
            }
        }

        return obj;
    }

	class System_Action_Event : LuaDelegate
	{
		public System_Action_Event(LuaFunction func) : base(func) { }
		public System_Action_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action System_Action(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			System_Action_Event target = new System_Action_Event(func);
			System.Action d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_Event target = new System_Action_Event(func, self);
			System.Action d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action), L, pos);
	}

	void Push_System_Action(IntPtr L, System.Action o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction UnityEngine_Events_UnityAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_Event target = new UnityEngine_Events_UnityAction_Event(func);
			UnityEngine.Events.UnityAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_Event target = new UnityEngine_Events_UnityAction_Event(func, self);
			UnityEngine.Events.UnityAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Events.UnityAction), L, pos);
	}

	void Push_UnityEngine_Events_UnityAction(IntPtr L, UnityEngine.Events.UnityAction o)
	{
		ToLua.Push(L, o);
	}

	class System_Predicate_int_Event : LuaDelegate
	{
		public System_Predicate_int_Event(LuaFunction func) : base(func) { }
		public System_Predicate_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Predicate<int> System_Predicate_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Predicate<int> fn = delegate(int param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Predicate_int_Event target = new System_Predicate_int_Event(func);
			System.Predicate<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Predicate_int_Event target = new System_Predicate_int_Event(func, self);
			System.Predicate<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Predicate_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Predicate<int>), L, pos);
	}

	void Push_System_Predicate_int(IntPtr L, System.Predicate<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_int_Event : LuaDelegate
	{
		public System_Action_int_Event(LuaFunction func) : base(func) { }
		public System_Action_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<int> System_Action_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<int> fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_int_Event target = new System_Action_int_Event(func);
			System.Action<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_int_Event target = new System_Action_int_Event(func, self);
			System.Action<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<int>), L, pos);
	}

	void Push_System_Action_int(IntPtr L, System.Action<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Comparison_int_Event : LuaDelegate
	{
		public System_Comparison_int_Event(LuaFunction func) : base(func) { }
		public System_Comparison_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Comparison<int> System_Comparison_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Comparison<int> fn = delegate(int param0, int param1) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Comparison_int_Event target = new System_Comparison_int_Event(func);
			System.Comparison<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Comparison_int_Event target = new System_Comparison_int_Event(func, self);
			System.Comparison<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Comparison_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Comparison<int>), L, pos);
	}

	void Push_System_Comparison_int(IntPtr L, System.Comparison<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_int_int_Event : LuaDelegate
	{
		public System_Func_int_int_Event(LuaFunction func) : base(func) { }
		public System_Func_int_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<int,int> System_Func_int_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<int,int> fn = delegate(int param0) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Func_int_int_Event target = new System_Func_int_int_Event(func);
			System.Func<int,int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_int_int_Event target = new System_Func_int_int_Event(func, self);
			System.Func<int,int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_int_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<int,int>), L, pos);
	}

	void Push_System_Func_int_int(IntPtr L, System.Func<int,int> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Camera_CameraCallback_Event : LuaDelegate
	{
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Camera param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Camera param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Camera.CameraCallback UnityEngine_Camera_CameraCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Camera.CameraCallback fn = delegate(UnityEngine.Camera param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Camera_CameraCallback_Event target = new UnityEngine_Camera_CameraCallback_Event(func);
			UnityEngine.Camera.CameraCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Camera_CameraCallback_Event target = new UnityEngine_Camera_CameraCallback_Event(func, self);
			UnityEngine.Camera.CameraCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Camera_CameraCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Camera.CameraCallback), L, pos);
	}

	void Push_UnityEngine_Camera_CameraCallback(IntPtr L, UnityEngine.Camera.CameraCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_AdvertisingIdentifierCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, bool param1, string param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, bool param1, string param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.AdvertisingIdentifierCallback UnityEngine_Application_AdvertisingIdentifierCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.AdvertisingIdentifierCallback fn = delegate(string param0, bool param1, string param2) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_AdvertisingIdentifierCallback_Event target = new UnityEngine_Application_AdvertisingIdentifierCallback_Event(func);
			UnityEngine.Application.AdvertisingIdentifierCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_AdvertisingIdentifierCallback_Event target = new UnityEngine_Application_AdvertisingIdentifierCallback_Event(func, self);
			UnityEngine.Application.AdvertisingIdentifierCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.AdvertisingIdentifierCallback), L, pos);
	}

	void Push_UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L, UnityEngine.Application.AdvertisingIdentifierCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_LowMemoryCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_LowMemoryCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_LowMemoryCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.LowMemoryCallback UnityEngine_Application_LowMemoryCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.LowMemoryCallback fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_LowMemoryCallback_Event target = new UnityEngine_Application_LowMemoryCallback_Event(func);
			UnityEngine.Application.LowMemoryCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_LowMemoryCallback_Event target = new UnityEngine_Application_LowMemoryCallback_Event(func, self);
			UnityEngine.Application.LowMemoryCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_LowMemoryCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.LowMemoryCallback), L, pos);
	}

	void Push_UnityEngine_Application_LowMemoryCallback(IntPtr L, UnityEngine.Application.LowMemoryCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_LogCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_LogCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_LogCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, string param1, UnityEngine.LogType param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, string param1, UnityEngine.LogType param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.LogCallback UnityEngine_Application_LogCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.LogCallback fn = delegate(string param0, string param1, UnityEngine.LogType param2) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_LogCallback_Event target = new UnityEngine_Application_LogCallback_Event(func);
			UnityEngine.Application.LogCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_LogCallback_Event target = new UnityEngine_Application_LogCallback_Event(func, self);
			UnityEngine.Application.LogCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_LogCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.LogCallback), L, pos);
	}

	void Push_UnityEngine_Application_LogCallback(IntPtr L, UnityEngine.Application.LogCallback o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_bool_Event : LuaDelegate
	{
		public System_Action_bool_Event(LuaFunction func) : base(func) { }
		public System_Action_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(bool param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(bool param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<bool> System_Action_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<bool> fn = delegate(bool param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_bool_Event target = new System_Action_bool_Event(func);
			System.Action<bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_bool_Event target = new System_Action_bool_Event(func, self);
			System.Action<bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<bool>), L, pos);
	}

	void Push_System_Action_bool(IntPtr L, System.Action<bool> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_bool_Event : LuaDelegate
	{
		public System_Func_bool_Event(LuaFunction func) : base(func) { }
		public System_Func_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call()
		{
			func.BeginPCall();
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<bool> System_Func_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<bool> fn = delegate() { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Func_bool_Event target = new System_Func_bool_Event(func);
			System.Func<bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_bool_Event target = new System_Func_bool_Event(func, self);
			System.Func<bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<bool>), L, pos);
	}

	void Push_System_Func_bool(IntPtr L, System.Func<bool> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_AudioClip_PCMReaderCallback_Event : LuaDelegate
	{
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float[] param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float[] param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.AudioClip.PCMReaderCallback UnityEngine_AudioClip_PCMReaderCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AudioClip.PCMReaderCallback fn = delegate(float[] param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AudioClip_PCMReaderCallback_Event target = new UnityEngine_AudioClip_PCMReaderCallback_Event(func);
			UnityEngine.AudioClip.PCMReaderCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AudioClip_PCMReaderCallback_Event target = new UnityEngine_AudioClip_PCMReaderCallback_Event(func, self);
			UnityEngine.AudioClip.PCMReaderCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_AudioClip_PCMReaderCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.AudioClip.PCMReaderCallback), L, pos);
	}

	void Push_UnityEngine_AudioClip_PCMReaderCallback(IntPtr L, UnityEngine.AudioClip.PCMReaderCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_AudioClip_PCMSetPositionCallback_Event : LuaDelegate
	{
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.AudioClip.PCMSetPositionCallback UnityEngine_AudioClip_PCMSetPositionCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AudioClip.PCMSetPositionCallback fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AudioClip_PCMSetPositionCallback_Event target = new UnityEngine_AudioClip_PCMSetPositionCallback_Event(func);
			UnityEngine.AudioClip.PCMSetPositionCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AudioClip_PCMSetPositionCallback_Event target = new UnityEngine_AudioClip_PCMSetPositionCallback_Event(func, self);
			UnityEngine.AudioClip.PCMSetPositionCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.AudioClip.PCMSetPositionCallback), L, pos);
	}

	void Push_UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L, UnityEngine.AudioClip.PCMSetPositionCallback o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_AsyncOperation_Event : LuaDelegate
	{
		public System_Action_UnityEngine_AsyncOperation_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_AsyncOperation_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.AsyncOperation param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.AsyncOperation param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.AsyncOperation> System_Action_UnityEngine_AsyncOperation(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.AsyncOperation> fn = delegate(UnityEngine.AsyncOperation param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_AsyncOperation_Event target = new System_Action_UnityEngine_AsyncOperation_Event(func);
			System.Action<UnityEngine.AsyncOperation> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_AsyncOperation_Event target = new System_Action_UnityEngine_AsyncOperation_Event(func, self);
			System.Action<UnityEngine.AsyncOperation> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_AsyncOperation(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.AsyncOperation>), L, pos);
	}

	void Push_System_Action_UnityEngine_AsyncOperation(IntPtr L, System.Action<UnityEngine.AsyncOperation> o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_EventCallback1_Event : LuaDelegate
	{
		public FairyGUI_EventCallback1_Event(LuaFunction func) : base(func) { }
		public FairyGUI_EventCallback1_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(FairyGUI.EventContext param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(FairyGUI.EventContext param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.EventCallback1 FairyGUI_EventCallback1(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.EventCallback1 fn = delegate(FairyGUI.EventContext param0) { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_EventCallback1_Event target = new FairyGUI_EventCallback1_Event(func);
			FairyGUI.EventCallback1 d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_EventCallback1_Event target = new FairyGUI_EventCallback1_Event(func, self);
			FairyGUI.EventCallback1 d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_EventCallback1(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.EventCallback1), L, pos);
	}

	void Push_FairyGUI_EventCallback1(IntPtr L, FairyGUI.EventCallback1 o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_EventCallback0_Event : LuaDelegate
	{
		public FairyGUI_EventCallback0_Event(LuaFunction func) : base(func) { }
		public FairyGUI_EventCallback0_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.EventCallback0 FairyGUI_EventCallback0(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.EventCallback0 fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_EventCallback0_Event target = new FairyGUI_EventCallback0_Event(func);
			FairyGUI.EventCallback0 d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_EventCallback0_Event target = new FairyGUI_EventCallback0_Event(func, self);
			FairyGUI.EventCallback0 d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_EventCallback0(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.EventCallback0), L, pos);
	}

	void Push_FairyGUI_EventCallback0(IntPtr L, FairyGUI.EventCallback0 o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_ListItemRenderer_Event : LuaDelegate
	{
		public FairyGUI_ListItemRenderer_Event(LuaFunction func) : base(func) { }
		public FairyGUI_ListItemRenderer_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0, FairyGUI.GObject param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0, FairyGUI.GObject param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.ListItemRenderer FairyGUI_ListItemRenderer(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.ListItemRenderer fn = delegate(int param0, FairyGUI.GObject param1) { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_ListItemRenderer_Event target = new FairyGUI_ListItemRenderer_Event(func);
			FairyGUI.ListItemRenderer d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_ListItemRenderer_Event target = new FairyGUI_ListItemRenderer_Event(func, self);
			FairyGUI.ListItemRenderer d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_ListItemRenderer(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.ListItemRenderer), L, pos);
	}

	void Push_FairyGUI_ListItemRenderer(IntPtr L, FairyGUI.ListItemRenderer o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_ListItemProvider_Event : LuaDelegate
	{
		public FairyGUI_ListItemProvider_Event(LuaFunction func) : base(func) { }
		public FairyGUI_ListItemProvider_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public string Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			string ret = func.CheckString();
			func.EndPCall();
			return ret;
		}

		public string CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			string ret = func.CheckString();
			func.EndPCall();
			return ret;
		}
	}

	public FairyGUI.ListItemProvider FairyGUI_ListItemProvider(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.ListItemProvider fn = delegate(int param0) { return null; };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_ListItemProvider_Event target = new FairyGUI_ListItemProvider_Event(func);
			FairyGUI.ListItemProvider d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_ListItemProvider_Event target = new FairyGUI_ListItemProvider_Event(func, self);
			FairyGUI.ListItemProvider d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_ListItemProvider(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.ListItemProvider), L, pos);
	}

	void Push_FairyGUI_ListItemProvider(IntPtr L, FairyGUI.ListItemProvider o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_PlayCompleteCallback_Event : LuaDelegate
	{
		public FairyGUI_PlayCompleteCallback_Event(LuaFunction func) : base(func) { }
		public FairyGUI_PlayCompleteCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.PlayCompleteCallback FairyGUI_PlayCompleteCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.PlayCompleteCallback fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_PlayCompleteCallback_Event target = new FairyGUI_PlayCompleteCallback_Event(func);
			FairyGUI.PlayCompleteCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_PlayCompleteCallback_Event target = new FairyGUI_PlayCompleteCallback_Event(func, self);
			FairyGUI.PlayCompleteCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_PlayCompleteCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.PlayCompleteCallback), L, pos);
	}

	void Push_FairyGUI_PlayCompleteCallback(IntPtr L, FairyGUI.PlayCompleteCallback o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_TransitionHook_Event : LuaDelegate
	{
		public FairyGUI_TransitionHook_Event(LuaFunction func) : base(func) { }
		public FairyGUI_TransitionHook_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.TransitionHook FairyGUI_TransitionHook(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.TransitionHook fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_TransitionHook_Event target = new FairyGUI_TransitionHook_Event(func);
			FairyGUI.TransitionHook d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_TransitionHook_Event target = new FairyGUI_TransitionHook_Event(func, self);
			FairyGUI.TransitionHook d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_TransitionHook(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.TransitionHook), L, pos);
	}

	void Push_FairyGUI_TransitionHook(IntPtr L, FairyGUI.TransitionHook o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_UIPackage_LoadResource_Event : LuaDelegate
	{
		public FairyGUI_UIPackage_LoadResource_Event(LuaFunction func) : base(func) { }
		public FairyGUI_UIPackage_LoadResource_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public object Call(string param0, string param1, System.Type param2, out FairyGUI.DestroyMethod param3)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			object ret = func.CheckVariant();
			param3 = (FairyGUI.DestroyMethod)func.CheckObject(typeof(FairyGUI.DestroyMethod));
			func.EndPCall();
			return ret;
		}

		public object CallWithSelf(string param0, string param1, System.Type param2, out FairyGUI.DestroyMethod param3)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			object ret = func.CheckVariant();
			param3 = (FairyGUI.DestroyMethod)func.CheckObject(typeof(FairyGUI.DestroyMethod));
			func.EndPCall();
			return ret;
		}
	}

	public FairyGUI.UIPackage.LoadResource FairyGUI_UIPackage_LoadResource(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.UIPackage.LoadResource fn = delegate(string param0, string param1, System.Type param2, out FairyGUI.DestroyMethod param3) 
			{
				param3 = default(FairyGUI.DestroyMethod);
			return null;			};

			return fn;
		}

		if(!flag)
		{
			FairyGUI_UIPackage_LoadResource_Event target = new FairyGUI_UIPackage_LoadResource_Event(func);
			FairyGUI.UIPackage.LoadResource d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_UIPackage_LoadResource_Event target = new FairyGUI_UIPackage_LoadResource_Event(func, self);
			FairyGUI.UIPackage.LoadResource d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_UIPackage_LoadResource(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.UIPackage.LoadResource), L, pos);
	}

	void Push_FairyGUI_UIPackage_LoadResource(IntPtr L, FairyGUI.UIPackage.LoadResource o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_UIPackage_CreateObjectCallback_Event : LuaDelegate
	{
		public FairyGUI_UIPackage_CreateObjectCallback_Event(LuaFunction func) : base(func) { }
		public FairyGUI_UIPackage_CreateObjectCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(FairyGUI.GObject param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(FairyGUI.GObject param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.UIPackage.CreateObjectCallback FairyGUI_UIPackage_CreateObjectCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.UIPackage.CreateObjectCallback fn = delegate(FairyGUI.GObject param0) { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_UIPackage_CreateObjectCallback_Event target = new FairyGUI_UIPackage_CreateObjectCallback_Event(func);
			FairyGUI.UIPackage.CreateObjectCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_UIPackage_CreateObjectCallback_Event target = new FairyGUI_UIPackage_CreateObjectCallback_Event(func, self);
			FairyGUI.UIPackage.CreateObjectCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_UIPackage_CreateObjectCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.UIPackage.CreateObjectCallback), L, pos);
	}

	void Push_FairyGUI_UIPackage_CreateObjectCallback(IntPtr L, FairyGUI.UIPackage.CreateObjectCallback o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_GObjectPool_InitCallbackDelegate_Event : LuaDelegate
	{
		public FairyGUI_GObjectPool_InitCallbackDelegate_Event(LuaFunction func) : base(func) { }
		public FairyGUI_GObjectPool_InitCallbackDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(FairyGUI.GObject param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(FairyGUI.GObject param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.GObjectPool.InitCallbackDelegate FairyGUI_GObjectPool_InitCallbackDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.GObjectPool.InitCallbackDelegate fn = delegate(FairyGUI.GObject param0) { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_GObjectPool_InitCallbackDelegate_Event target = new FairyGUI_GObjectPool_InitCallbackDelegate_Event(func);
			FairyGUI.GObjectPool.InitCallbackDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_GObjectPool_InitCallbackDelegate_Event target = new FairyGUI_GObjectPool_InitCallbackDelegate_Event(func, self);
			FairyGUI.GObjectPool.InitCallbackDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_GObjectPool_InitCallbackDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.GObjectPool.InitCallbackDelegate), L, pos);
	}

	void Push_FairyGUI_GObjectPool_InitCallbackDelegate(IntPtr L, FairyGUI.GObjectPool.InitCallbackDelegate o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_TimerCallback_Event : LuaDelegate
	{
		public FairyGUI_TimerCallback_Event(LuaFunction func) : base(func) { }
		public FairyGUI_TimerCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(object param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(object param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.TimerCallback FairyGUI_TimerCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.TimerCallback fn = delegate(object param0) { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_TimerCallback_Event target = new FairyGUI_TimerCallback_Event(func);
			FairyGUI.TimerCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_TimerCallback_Event target = new FairyGUI_TimerCallback_Event(func, self);
			FairyGUI.TimerCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_TimerCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.TimerCallback), L, pos);
	}

	void Push_FairyGUI_TimerCallback(IntPtr L, FairyGUI.TimerCallback o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_GTweenCallback_Event : LuaDelegate
	{
		public FairyGUI_GTweenCallback_Event(LuaFunction func) : base(func) { }
		public FairyGUI_GTweenCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.GTweenCallback FairyGUI_GTweenCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.GTweenCallback fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_GTweenCallback_Event target = new FairyGUI_GTweenCallback_Event(func);
			FairyGUI.GTweenCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_GTweenCallback_Event target = new FairyGUI_GTweenCallback_Event(func, self);
			FairyGUI.GTweenCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_GTweenCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.GTweenCallback), L, pos);
	}

	void Push_FairyGUI_GTweenCallback(IntPtr L, FairyGUI.GTweenCallback o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_GTweenCallback1_Event : LuaDelegate
	{
		public FairyGUI_GTweenCallback1_Event(LuaFunction func) : base(func) { }
		public FairyGUI_GTweenCallback1_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(FairyGUI.GTweener param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(FairyGUI.GTweener param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.GTweenCallback1 FairyGUI_GTweenCallback1(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.GTweenCallback1 fn = delegate(FairyGUI.GTweener param0) { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_GTweenCallback1_Event target = new FairyGUI_GTweenCallback1_Event(func);
			FairyGUI.GTweenCallback1 d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_GTweenCallback1_Event target = new FairyGUI_GTweenCallback1_Event(func, self);
			FairyGUI.GTweenCallback1 d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_GTweenCallback1(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.GTweenCallback1), L, pos);
	}

	void Push_FairyGUI_GTweenCallback1(IntPtr L, FairyGUI.GTweenCallback1 o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_UIObjectFactory_GComponentCreator_Event : LuaDelegate
	{
		public FairyGUI_UIObjectFactory_GComponentCreator_Event(LuaFunction func) : base(func) { }
		public FairyGUI_UIObjectFactory_GComponentCreator_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public FairyGUI.GComponent Call()
		{
			func.BeginPCall();
			func.PCall();
			FairyGUI.GComponent ret = (FairyGUI.GComponent)func.CheckObject(typeof(FairyGUI.GComponent));
			func.EndPCall();
			return ret;
		}

		public FairyGUI.GComponent CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			FairyGUI.GComponent ret = (FairyGUI.GComponent)func.CheckObject(typeof(FairyGUI.GComponent));
			func.EndPCall();
			return ret;
		}
	}

	public FairyGUI.UIObjectFactory.GComponentCreator FairyGUI_UIObjectFactory_GComponentCreator(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.UIObjectFactory.GComponentCreator fn = delegate() { return null; };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_UIObjectFactory_GComponentCreator_Event target = new FairyGUI_UIObjectFactory_GComponentCreator_Event(func);
			FairyGUI.UIObjectFactory.GComponentCreator d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_UIObjectFactory_GComponentCreator_Event target = new FairyGUI_UIObjectFactory_GComponentCreator_Event(func, self);
			FairyGUI.UIObjectFactory.GComponentCreator d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_UIObjectFactory_GComponentCreator(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.UIObjectFactory.GComponentCreator), L, pos);
	}

	void Push_FairyGUI_UIObjectFactory_GComponentCreator(IntPtr L, FairyGUI.UIObjectFactory.GComponentCreator o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_UIObjectFactory_GLoaderCreator_Event : LuaDelegate
	{
		public FairyGUI_UIObjectFactory_GLoaderCreator_Event(LuaFunction func) : base(func) { }
		public FairyGUI_UIObjectFactory_GLoaderCreator_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public FairyGUI.GLoader Call()
		{
			func.BeginPCall();
			func.PCall();
			FairyGUI.GLoader ret = (FairyGUI.GLoader)func.CheckObject(typeof(FairyGUI.GLoader));
			func.EndPCall();
			return ret;
		}

		public FairyGUI.GLoader CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			FairyGUI.GLoader ret = (FairyGUI.GLoader)func.CheckObject(typeof(FairyGUI.GLoader));
			func.EndPCall();
			return ret;
		}
	}

	public FairyGUI.UIObjectFactory.GLoaderCreator FairyGUI_UIObjectFactory_GLoaderCreator(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.UIObjectFactory.GLoaderCreator fn = delegate() { return null; };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_UIObjectFactory_GLoaderCreator_Event target = new FairyGUI_UIObjectFactory_GLoaderCreator_Event(func);
			FairyGUI.UIObjectFactory.GLoaderCreator d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_UIObjectFactory_GLoaderCreator_Event target = new FairyGUI_UIObjectFactory_GLoaderCreator_Event(func, self);
			FairyGUI.UIObjectFactory.GLoaderCreator d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_UIObjectFactory_GLoaderCreator(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.UIObjectFactory.GLoaderCreator), L, pos);
	}

	void Push_FairyGUI_UIObjectFactory_GLoaderCreator(IntPtr L, FairyGUI.UIObjectFactory.GLoaderCreator o)
	{
		ToLua.Push(L, o);
	}

	class LTDescr_EaseTypeDelegate_Event : LuaDelegate
	{
		public LTDescr_EaseTypeDelegate_Event(LuaFunction func) : base(func) { }
		public LTDescr_EaseTypeDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Vector3 Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Vector3 ret = func.CheckVector3();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Vector3 CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Vector3 ret = func.CheckVector3();
			func.EndPCall();
			return ret;
		}
	}

	public LTDescr.EaseTypeDelegate LTDescr_EaseTypeDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			LTDescr.EaseTypeDelegate fn = delegate() { return default(UnityEngine.Vector3); };
			return fn;
		}

		if(!flag)
		{
			LTDescr_EaseTypeDelegate_Event target = new LTDescr_EaseTypeDelegate_Event(func);
			LTDescr.EaseTypeDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			LTDescr_EaseTypeDelegate_Event target = new LTDescr_EaseTypeDelegate_Event(func, self);
			LTDescr.EaseTypeDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_LTDescr_EaseTypeDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(LTDescr.EaseTypeDelegate), L, pos);
	}

	void Push_LTDescr_EaseTypeDelegate(IntPtr L, LTDescr.EaseTypeDelegate o)
	{
		ToLua.Push(L, o);
	}

	class LTDescr_ActionMethodDelegate_Event : LuaDelegate
	{
		public LTDescr_ActionMethodDelegate_Event(LuaFunction func) : base(func) { }
		public LTDescr_ActionMethodDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public LTDescr.ActionMethodDelegate LTDescr_ActionMethodDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			LTDescr.ActionMethodDelegate fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			LTDescr_ActionMethodDelegate_Event target = new LTDescr_ActionMethodDelegate_Event(func);
			LTDescr.ActionMethodDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			LTDescr_ActionMethodDelegate_Event target = new LTDescr_ActionMethodDelegate_Event(func, self);
			LTDescr.ActionMethodDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_LTDescr_ActionMethodDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(LTDescr.ActionMethodDelegate), L, pos);
	}

	void Push_LTDescr_ActionMethodDelegate(IntPtr L, LTDescr.ActionMethodDelegate o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_object_Event : LuaDelegate
	{
		public System_Action_object_Event(LuaFunction func) : base(func) { }
		public System_Action_object_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(object param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(object param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<object> System_Action_object(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<object> fn = delegate(object param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_object_Event target = new System_Action_object_Event(func);
			System.Action<object> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_object_Event target = new System_Action_object_Event(func, self);
			System.Action<object> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_object(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<object>), L, pos);
	}

	void Push_System_Action_object(IntPtr L, System.Action<object> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_float_Event : LuaDelegate
	{
		public System_Action_float_Event(LuaFunction func) : base(func) { }
		public System_Action_float_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<float> System_Action_float(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<float> fn = delegate(float param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_float_Event target = new System_Action_float_Event(func);
			System.Action<float> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_float_Event target = new System_Action_float_Event(func, self);
			System.Action<float> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_float(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<float>), L, pos);
	}

	void Push_System_Action_float(IntPtr L, System.Action<float> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_float_float_Event : LuaDelegate
	{
		public System_Action_float_float_Event(LuaFunction func) : base(func) { }
		public System_Action_float_float_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0, float param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0, float param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<float,float> System_Action_float_float(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<float,float> fn = delegate(float param0, float param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_float_float_Event target = new System_Action_float_float_Event(func);
			System.Action<float,float> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_float_float_Event target = new System_Action_float_float_Event(func, self);
			System.Action<float,float> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_float_float(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<float,float>), L, pos);
	}

	void Push_System_Action_float_float(IntPtr L, System.Action<float,float> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_float_object_Event : LuaDelegate
	{
		public System_Action_float_object_Event(LuaFunction func) : base(func) { }
		public System_Action_float_object_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0, object param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0, object param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<float,object> System_Action_float_object(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<float,object> fn = delegate(float param0, object param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_float_object_Event target = new System_Action_float_object_Event(func);
			System.Action<float,object> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_float_object_Event target = new System_Action_float_object_Event(func, self);
			System.Action<float,object> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_float_object(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<float,object>), L, pos);
	}

	void Push_System_Action_float_object(IntPtr L, System.Action<float,object> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_Vector2_Event : LuaDelegate
	{
		public System_Action_UnityEngine_Vector2_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_Vector2_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Vector2 param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Vector2 param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.Vector2> System_Action_UnityEngine_Vector2(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.Vector2> fn = delegate(UnityEngine.Vector2 param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_Vector2_Event target = new System_Action_UnityEngine_Vector2_Event(func);
			System.Action<UnityEngine.Vector2> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_Vector2_Event target = new System_Action_UnityEngine_Vector2_Event(func, self);
			System.Action<UnityEngine.Vector2> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_Vector2(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.Vector2>), L, pos);
	}

	void Push_System_Action_UnityEngine_Vector2(IntPtr L, System.Action<UnityEngine.Vector2> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_Vector3_Event : LuaDelegate
	{
		public System_Action_UnityEngine_Vector3_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_Vector3_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Vector3 param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Vector3 param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.Vector3> System_Action_UnityEngine_Vector3(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.Vector3> fn = delegate(UnityEngine.Vector3 param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_Vector3_Event target = new System_Action_UnityEngine_Vector3_Event(func);
			System.Action<UnityEngine.Vector3> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_Vector3_Event target = new System_Action_UnityEngine_Vector3_Event(func, self);
			System.Action<UnityEngine.Vector3> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_Vector3(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.Vector3>), L, pos);
	}

	void Push_System_Action_UnityEngine_Vector3(IntPtr L, System.Action<UnityEngine.Vector3> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_Color_Event : LuaDelegate
	{
		public System_Action_UnityEngine_Color_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_Color_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Color param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Color param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.Color> System_Action_UnityEngine_Color(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.Color> fn = delegate(UnityEngine.Color param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_Color_Event target = new System_Action_UnityEngine_Color_Event(func);
			System.Action<UnityEngine.Color> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_Color_Event target = new System_Action_UnityEngine_Color_Event(func, self);
			System.Action<UnityEngine.Color> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_Color(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.Color>), L, pos);
	}

	void Push_System_Action_UnityEngine_Color(IntPtr L, System.Action<UnityEngine.Color> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_Color_object_Event : LuaDelegate
	{
		public System_Action_UnityEngine_Color_object_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_Color_object_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Color param0, object param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Color param0, object param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.Color,object> System_Action_UnityEngine_Color_object(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.Color,object> fn = delegate(UnityEngine.Color param0, object param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_Color_object_Event target = new System_Action_UnityEngine_Color_object_Event(func);
			System.Action<UnityEngine.Color,object> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_Color_object_Event target = new System_Action_UnityEngine_Color_object_Event(func, self);
			System.Action<UnityEngine.Color,object> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_Color_object(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.Color,object>), L, pos);
	}

	void Push_System_Action_UnityEngine_Color_object(IntPtr L, System.Action<UnityEngine.Color,object> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_Vector3_object_Event : LuaDelegate
	{
		public System_Action_UnityEngine_Vector3_object_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_Vector3_object_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Vector3 param0, object param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Vector3 param0, object param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.Vector3,object> System_Action_UnityEngine_Vector3_object(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.Vector3,object> fn = delegate(UnityEngine.Vector3 param0, object param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_Vector3_object_Event target = new System_Action_UnityEngine_Vector3_object_Event(func);
			System.Action<UnityEngine.Vector3,object> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_Vector3_object_Event target = new System_Action_UnityEngine_Vector3_object_Event(func, self);
			System.Action<UnityEngine.Vector3,object> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_Vector3_object(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.Vector3,object>), L, pos);
	}

	void Push_System_Action_UnityEngine_Vector3_object(IntPtr L, System.Action<UnityEngine.Vector3,object> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_LTEvent_Event : LuaDelegate
	{
		public System_Action_LTEvent_Event(LuaFunction func) : base(func) { }
		public System_Action_LTEvent_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(LTEvent param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(LTEvent param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<LTEvent> System_Action_LTEvent(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<LTEvent> fn = delegate(LTEvent param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_LTEvent_Event target = new System_Action_LTEvent_Event(func);
			System.Action<LTEvent> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_LTEvent_Event target = new System_Action_LTEvent_Event(func, self);
			System.Action<LTEvent> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_LTEvent(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<LTEvent>), L, pos);
	}

	void Push_System_Action_LTEvent(IntPtr L, System.Action<LTEvent> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_strings_Event : LuaDelegate
	{
		public System_Action_strings_Event(LuaFunction func) : base(func) { }
		public System_Action_strings_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string[] param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string[] param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<string[]> System_Action_strings(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<string[]> fn = delegate(string[] param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_strings_Event target = new System_Action_strings_Event(func);
			System.Action<string[]> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_strings_Event target = new System_Action_strings_Event(func, self);
			System.Action<string[]> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_strings(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<string[]>), L, pos);
	}

	void Push_System_Action_strings(IntPtr L, System.Action<string[]> o)
	{
		ToLua.Push(L, o);
	}

	class DragonBones_ListenerDelegate_DragonBones_EventObject_Event : LuaDelegate
	{
		public DragonBones_ListenerDelegate_DragonBones_EventObject_Event(LuaFunction func) : base(func) { }
		public DragonBones_ListenerDelegate_DragonBones_EventObject_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, DragonBones.EventObject param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, DragonBones.EventObject param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public DragonBones.ListenerDelegate<DragonBones.EventObject> DragonBones_ListenerDelegate_DragonBones_EventObject(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DragonBones.ListenerDelegate<DragonBones.EventObject> fn = delegate(string param0, DragonBones.EventObject param1) { };
			return fn;
		}

		if(!flag)
		{
			DragonBones_ListenerDelegate_DragonBones_EventObject_Event target = new DragonBones_ListenerDelegate_DragonBones_EventObject_Event(func);
			DragonBones.ListenerDelegate<DragonBones.EventObject> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DragonBones_ListenerDelegate_DragonBones_EventObject_Event target = new DragonBones_ListenerDelegate_DragonBones_EventObject_Event(func, self);
			DragonBones.ListenerDelegate<DragonBones.EventObject> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DragonBones_ListenerDelegate_DragonBones_EventObject(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DragonBones.ListenerDelegate<DragonBones.EventObject>), L, pos);
	}

	void Push_DragonBones_ListenerDelegate_DragonBones_EventObject(IntPtr L, DragonBones.ListenerDelegate<DragonBones.EventObject> o)
	{
		ToLua.Push(L, o);
	}

	class Spine_Unity_UpdateBonesDelegate_Event : LuaDelegate
	{
		public Spine_Unity_UpdateBonesDelegate_Event(LuaFunction func) : base(func) { }
		public Spine_Unity_UpdateBonesDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Spine.Unity.ISkeletonAnimation param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Spine.Unity.ISkeletonAnimation param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Spine.Unity.UpdateBonesDelegate Spine_Unity_UpdateBonesDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Spine.Unity.UpdateBonesDelegate fn = delegate(Spine.Unity.ISkeletonAnimation param0) { };
			return fn;
		}

		if(!flag)
		{
			Spine_Unity_UpdateBonesDelegate_Event target = new Spine_Unity_UpdateBonesDelegate_Event(func);
			Spine.Unity.UpdateBonesDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Spine_Unity_UpdateBonesDelegate_Event target = new Spine_Unity_UpdateBonesDelegate_Event(func, self);
			Spine.Unity.UpdateBonesDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Spine_Unity_UpdateBonesDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(Spine.Unity.UpdateBonesDelegate), L, pos);
	}

	void Push_Spine_Unity_UpdateBonesDelegate(IntPtr L, Spine.Unity.UpdateBonesDelegate o)
	{
		ToLua.Push(L, o);
	}

	class Spine_Unity_SkeletonRenderer_InstructionDelegate_Event : LuaDelegate
	{
		public Spine_Unity_SkeletonRenderer_InstructionDelegate_Event(LuaFunction func) : base(func) { }
		public Spine_Unity_SkeletonRenderer_InstructionDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Spine.Unity.SkeletonRendererInstruction param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Spine.Unity.SkeletonRendererInstruction param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Spine.Unity.SkeletonRenderer.InstructionDelegate Spine_Unity_SkeletonRenderer_InstructionDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Spine.Unity.SkeletonRenderer.InstructionDelegate fn = delegate(Spine.Unity.SkeletonRendererInstruction param0) { };
			return fn;
		}

		if(!flag)
		{
			Spine_Unity_SkeletonRenderer_InstructionDelegate_Event target = new Spine_Unity_SkeletonRenderer_InstructionDelegate_Event(func);
			Spine.Unity.SkeletonRenderer.InstructionDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Spine_Unity_SkeletonRenderer_InstructionDelegate_Event target = new Spine_Unity_SkeletonRenderer_InstructionDelegate_Event(func, self);
			Spine.Unity.SkeletonRenderer.InstructionDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Spine_Unity_SkeletonRenderer_InstructionDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(Spine.Unity.SkeletonRenderer.InstructionDelegate), L, pos);
	}

	void Push_Spine_Unity_SkeletonRenderer_InstructionDelegate(IntPtr L, Spine.Unity.SkeletonRenderer.InstructionDelegate o)
	{
		ToLua.Push(L, o);
	}

	class Spine_Unity_MeshGeneratorDelegate_Event : LuaDelegate
	{
		public Spine_Unity_MeshGeneratorDelegate_Event(LuaFunction func) : base(func) { }
		public Spine_Unity_MeshGeneratorDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Spine.Unity.MeshGeneratorBuffers param0)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Spine.Unity.MeshGeneratorBuffers param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Spine.Unity.MeshGeneratorDelegate Spine_Unity_MeshGeneratorDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Spine.Unity.MeshGeneratorDelegate fn = delegate(Spine.Unity.MeshGeneratorBuffers param0) { };
			return fn;
		}

		if(!flag)
		{
			Spine_Unity_MeshGeneratorDelegate_Event target = new Spine_Unity_MeshGeneratorDelegate_Event(func);
			Spine.Unity.MeshGeneratorDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Spine_Unity_MeshGeneratorDelegate_Event target = new Spine_Unity_MeshGeneratorDelegate_Event(func, self);
			Spine.Unity.MeshGeneratorDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Spine_Unity_MeshGeneratorDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(Spine.Unity.MeshGeneratorDelegate), L, pos);
	}

	void Push_Spine_Unity_MeshGeneratorDelegate(IntPtr L, Spine.Unity.MeshGeneratorDelegate o)
	{
		ToLua.Push(L, o);
	}

	class Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate_Event : LuaDelegate
	{
		public Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate_Event(LuaFunction func) : base(func) { }
		public Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Spine.Unity.SkeletonRenderer param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Spine.Unity.SkeletonRenderer param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate fn = delegate(Spine.Unity.SkeletonRenderer param0) { };
			return fn;
		}

		if(!flag)
		{
			Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate_Event target = new Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate_Event(func);
			Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate_Event target = new Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate_Event(func, self);
			Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate), L, pos);
	}

	void Push_Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate(IntPtr L, Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_string_bool_Event : LuaDelegate
	{
		public System_Func_string_bool_Event(LuaFunction func) : base(func) { }
		public System_Func_string_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<string,bool> System_Func_string_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<string,bool> fn = delegate(string param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Func_string_bool_Event target = new System_Func_string_bool_Event(func);
			System.Func<string,bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_string_bool_Event target = new System_Func_string_bool_Event(func, self);
			System.Func<string,bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_string_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<string,bool>), L, pos);
	}

	void Push_System_Func_string_bool(IntPtr L, System.Func<string,bool> o)
	{
		ToLua.Push(L, o);
	}

	class Spine_AnimationState_TrackEntryDelegate_Event : LuaDelegate
	{
		public Spine_AnimationState_TrackEntryDelegate_Event(LuaFunction func) : base(func) { }
		public Spine_AnimationState_TrackEntryDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Spine.TrackEntry param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Spine.TrackEntry param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Spine.AnimationState.TrackEntryDelegate Spine_AnimationState_TrackEntryDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Spine.AnimationState.TrackEntryDelegate fn = delegate(Spine.TrackEntry param0) { };
			return fn;
		}

		if(!flag)
		{
			Spine_AnimationState_TrackEntryDelegate_Event target = new Spine_AnimationState_TrackEntryDelegate_Event(func);
			Spine.AnimationState.TrackEntryDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Spine_AnimationState_TrackEntryDelegate_Event target = new Spine_AnimationState_TrackEntryDelegate_Event(func, self);
			Spine.AnimationState.TrackEntryDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Spine_AnimationState_TrackEntryDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(Spine.AnimationState.TrackEntryDelegate), L, pos);
	}

	void Push_Spine_AnimationState_TrackEntryDelegate(IntPtr L, Spine.AnimationState.TrackEntryDelegate o)
	{
		ToLua.Push(L, o);
	}

	class Spine_AnimationState_TrackEntryEventDelegate_Event : LuaDelegate
	{
		public Spine_AnimationState_TrackEntryEventDelegate_Event(LuaFunction func) : base(func) { }
		public Spine_AnimationState_TrackEntryEventDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Spine.TrackEntry param0, Spine.Event param1)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Spine.TrackEntry param0, Spine.Event param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public Spine.AnimationState.TrackEntryEventDelegate Spine_AnimationState_TrackEntryEventDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Spine.AnimationState.TrackEntryEventDelegate fn = delegate(Spine.TrackEntry param0, Spine.Event param1) { };
			return fn;
		}

		if(!flag)
		{
			Spine_AnimationState_TrackEntryEventDelegate_Event target = new Spine_AnimationState_TrackEntryEventDelegate_Event(func);
			Spine.AnimationState.TrackEntryEventDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Spine_AnimationState_TrackEntryEventDelegate_Event target = new Spine_AnimationState_TrackEntryEventDelegate_Event(func, self);
			Spine.AnimationState.TrackEntryEventDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Spine_AnimationState_TrackEntryEventDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(Spine.AnimationState.TrackEntryEventDelegate), L, pos);
	}

	void Push_Spine_AnimationState_TrackEntryEventDelegate(IntPtr L, Spine.AnimationState.TrackEntryEventDelegate o)
	{
		ToLua.Push(L, o);
	}

}

