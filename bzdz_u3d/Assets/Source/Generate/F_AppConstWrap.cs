//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class F_AppConstWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(F_AppConst), typeof(System.Object));
		L.RegFunction("New", _CreateF_AppConst);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("AppName", get_AppName, null);
		L.RegVar("ipVer", get_ipVer, set_ipVer);
		L.RegVar("appVer", get_appVer, set_appVer);
		L.RegVar("jsonServerInfo", get_jsonServerInfo, set_jsonServerInfo);
		L.RegVar("xInstallAwakeInfo", get_xInstallAwakeInfo, set_xInstallAwakeInfo);
		L.RegVar("xInstallInstallInfo", get_xInstallInstallInfo, set_xInstallInstallInfo);
		L.RegVar("ipInfoCfg", get_ipInfoCfg, set_ipInfoCfg);
		L.RegVar("serverInfoCfg", get_serverInfoCfg, set_serverInfoCfg);
		L.RegVar("jsonDebugInfo", get_jsonDebugInfo, set_jsonDebugInfo);
		L.RegVar("debugInfoCfg", get_debugInfoCfg, set_debugInfoCfg);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateF_AppConst(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				F_AppConst obj = new F_AppConst();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: F_AppConst.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AppName(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, F_AppConst.AppName);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ipVer(IntPtr L)
	{
		try
		{
			LuaDLL.tolua_pushint64(L, F_AppConst.ipVer);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_appVer(IntPtr L)
	{
		try
		{
			LuaDLL.tolua_pushint64(L, F_AppConst.appVer);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_jsonServerInfo(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, F_AppConst.jsonServerInfo);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_xInstallAwakeInfo(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, F_AppConst.xInstallAwakeInfo);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_xInstallInstallInfo(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, F_AppConst.xInstallInstallInfo);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ipInfoCfg(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, F_AppConst.ipInfoCfg);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_serverInfoCfg(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, F_AppConst.serverInfoCfg);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_jsonDebugInfo(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, F_AppConst.jsonDebugInfo);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_debugInfoCfg(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, F_AppConst.debugInfoCfg);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ipVer(IntPtr L)
	{
		try
		{
			long arg0 = LuaDLL.tolua_checkint64(L, 2);
			F_AppConst.ipVer = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_appVer(IntPtr L)
	{
		try
		{
			long arg0 = LuaDLL.tolua_checkint64(L, 2);
			F_AppConst.appVer = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_jsonServerInfo(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			F_AppConst.jsonServerInfo = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_xInstallAwakeInfo(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			F_AppConst.xInstallAwakeInfo = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_xInstallInstallInfo(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			F_AppConst.xInstallInstallInfo = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ipInfoCfg(IntPtr L)
	{
		try
		{
			F_AppConst.IpInfo arg0 = (F_AppConst.IpInfo)ToLua.CheckObject<F_AppConst.IpInfo>(L, 2);
			F_AppConst.ipInfoCfg = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_serverInfoCfg(IntPtr L)
	{
		try
		{
			F_AppConst.ServerInfo arg0 = (F_AppConst.ServerInfo)ToLua.CheckObject<F_AppConst.ServerInfo>(L, 2);
			F_AppConst.serverInfoCfg = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_jsonDebugInfo(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			F_AppConst.jsonDebugInfo = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_debugInfoCfg(IntPtr L)
	{
		try
		{
			F_AppConst.DebugInfo arg0 = (F_AppConst.DebugInfo)ToLua.CheckObject<F_AppConst.DebugInfo>(L, 2);
			F_AppConst.debugInfoCfg = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

