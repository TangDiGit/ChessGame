//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class F_ExtensionCardWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(F_ExtensionCard), typeof(FairyGUI.GButton));
		L.RegFunction("ConstructFromXML", ConstructFromXML);
		L.RegFunction("Turn", Turn);
		L.RegFunction("New", _CreateF_ExtensionCard);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateF_ExtensionCard(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				F_ExtensionCard obj = new F_ExtensionCard();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: F_ExtensionCard.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ConstructFromXML(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			F_ExtensionCard obj = (F_ExtensionCard)ToLua.CheckObject<F_ExtensionCard>(L, 1);
			FairyGUI.Utils.XML arg0 = (FairyGUI.Utils.XML)ToLua.CheckObject<FairyGUI.Utils.XML>(L, 2);
			obj.ConstructFromXML(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Turn(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			F_ExtensionCard obj = (F_ExtensionCard)ToLua.CheckObject<F_ExtensionCard>(L, 1);
			obj.Turn();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

