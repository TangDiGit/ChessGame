//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class F_LogoViewWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(F_LogoView), typeof(F_Singleton<F_LogoView>));
		L.RegFunction("Run", Run);
		L.RegFunction("Show", Show);
		L.RegFunction("Hide", Hide);
		L.RegFunction("SetNow", SetNow);
		L.RegFunction("SetTit", SetTit);
		L.RegFunction("SetBar", SetBar);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Run(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			F_LogoView obj = (F_LogoView)ToLua.CheckObject<F_LogoView>(L, 1);
			obj.Run();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Show(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			F_LogoView obj = (F_LogoView)ToLua.CheckObject<F_LogoView>(L, 1);
			obj.Show();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Hide(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			F_LogoView obj = (F_LogoView)ToLua.CheckObject<F_LogoView>(L, 1);
			obj.Hide();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetNow(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			F_LogoView obj = (F_LogoView)ToLua.CheckObject<F_LogoView>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.SetNow(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetTit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			F_LogoView obj = (F_LogoView)ToLua.CheckObject<F_LogoView>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.SetTit(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetBar(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			F_LogoView obj = (F_LogoView)ToLua.CheckObject<F_LogoView>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetBar(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

