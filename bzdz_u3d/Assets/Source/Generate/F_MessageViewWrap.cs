//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class F_MessageViewWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(F_MessageView), typeof(F_Singleton<F_MessageView>));
		L.RegFunction("Run", Run);
		L.RegFunction("Show", Show);
		L.RegFunction("Hide", Hide);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Run(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			F_MessageView obj = (F_MessageView)ToLua.CheckObject<F_MessageView>(L, 1);
			obj.Run();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Show(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				F_MessageView obj = (F_MessageView)ToLua.CheckObject<F_MessageView>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				obj.Show(arg0);
				return 0;
			}
			else if (count == 3)
			{
				F_MessageView obj = (F_MessageView)ToLua.CheckObject<F_MessageView>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				System.Action arg1 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 3);
				obj.Show(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				F_MessageView obj = (F_MessageView)ToLua.CheckObject<F_MessageView>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				System.Action arg1 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 3);
				System.Action arg2 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 4);
				obj.Show(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5)
			{
				F_MessageView obj = (F_MessageView)ToLua.CheckObject<F_MessageView>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				System.Action arg1 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 3);
				System.Action arg2 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 4);
				string arg3 = ToLua.CheckString(L, 5);
				obj.Show(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 6)
			{
				F_MessageView obj = (F_MessageView)ToLua.CheckObject<F_MessageView>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				System.Action arg1 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 3);
				System.Action arg2 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 4);
				string arg3 = ToLua.CheckString(L, 5);
				string arg4 = ToLua.CheckString(L, 6);
				obj.Show(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: F_MessageView.Show");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Hide(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			F_MessageView obj = (F_MessageView)ToLua.CheckObject<F_MessageView>(L, 1);
			obj.Hide();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

