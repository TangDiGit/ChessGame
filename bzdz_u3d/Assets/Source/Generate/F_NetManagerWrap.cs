//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class F_NetManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(F_NetManager), typeof(F_Singleton<F_NetManager>));
		L.RegFunction("Run", Run);
		L.RegFunction("AddEvent", AddEvent);
		L.RegFunction("CreateSocketClient", CreateSocketClient);
		L.RegFunction("RemoveSocketClient", RemoveSocketClient);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Run(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			F_NetManager obj = (F_NetManager)ToLua.CheckObject<F_NetManager>(L, 1);
			obj.Run();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			F_Msg arg0 = (F_Msg)ToLua.CheckObject<F_Msg>(L, 1);
			F_NetManager.AddEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateSocketClient(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			F_NetManager obj = (F_NetManager)ToLua.CheckObject<F_NetManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			short arg3 = (short)LuaDLL.luaL_checknumber(L, 5);
			F_SocketClient o = obj.CreateSocketClient(arg0, arg1, arg2, arg3);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveSocketClient(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			F_NetManager obj = (F_NetManager)ToLua.CheckObject<F_NetManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.RemoveSocketClient(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

