//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class F_ToolWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(F_Tool), typeof(F_Singleton<F_Tool>));
		L.RegFunction("SetCopyStr", SetCopyStr);
		L.RegFunction("ScreenShootOnClick", ScreenShootOnClick);
		L.RegFunction("DownloadSavePhotoAlbum", DownloadSavePhotoAlbum);
		L.RegFunction("GetWxLoginIsOutTime", GetWxLoginIsOutTime);
		L.RegFunction("SetWxLoginTimeNow", SetWxLoginTimeNow);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("isWxLoginOutTime", get_isWxLoginOutTime, set_isWxLoginOutTime);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetCopyStr(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			F_Tool obj = (F_Tool)ToLua.CheckObject<F_Tool>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.SetCopyStr(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ScreenShootOnClick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			F_Tool obj = (F_Tool)ToLua.CheckObject<F_Tool>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			System.Action arg2 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 4);
			obj.ScreenShootOnClick(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DownloadSavePhotoAlbum(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			F_Tool obj = (F_Tool)ToLua.CheckObject<F_Tool>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			System.Action arg1 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 3);
			obj.DownloadSavePhotoAlbum(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetWxLoginIsOutTime(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			F_Tool obj = (F_Tool)ToLua.CheckObject<F_Tool>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.GetWxLoginIsOutTime(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetWxLoginTimeNow(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			F_Tool obj = (F_Tool)ToLua.CheckObject<F_Tool>(L, 1);
			obj.SetWxLoginTimeNow();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isWxLoginOutTime(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, F_Tool.isWxLoginOutTime);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isWxLoginOutTime(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			F_Tool.isWxLoginOutTime = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

