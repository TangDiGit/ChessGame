//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LTBezierPathWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LTBezierPath), typeof(System.Object));
		L.RegFunction("setPoints", setPoints);
		L.RegFunction("point", point);
		L.RegFunction("place2d", place2d);
		L.RegFunction("placeLocal2d", placeLocal2d);
		L.RegFunction("place", place);
		L.RegFunction("placeLocal", placeLocal);
		L.RegFunction("getRationInOneRange", getRationInOneRange);
		L.RegFunction("gizmoDraw", gizmoDraw);
		L.RegFunction("New", _CreateLTBezierPath);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("pts", get_pts, set_pts);
		L.RegVar("length", get_length, set_length);
		L.RegVar("orientToPath", get_orientToPath, set_orientToPath);
		L.RegVar("orientToPath2d", get_orientToPath2d, set_orientToPath2d);
		L.RegVar("distance", get_distance, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateLTBezierPath(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				LTBezierPath obj = new LTBezierPath();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 1)
			{
				UnityEngine.Vector3[] arg0 = ToLua.CheckStructArray<UnityEngine.Vector3>(L, 1);
				LTBezierPath obj = new LTBezierPath(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: LTBezierPath.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setPoints(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LTBezierPath obj = (LTBezierPath)ToLua.CheckObject<LTBezierPath>(L, 1);
			UnityEngine.Vector3[] arg0 = ToLua.CheckStructArray<UnityEngine.Vector3>(L, 2);
			obj.setPoints(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int point(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LTBezierPath obj = (LTBezierPath)ToLua.CheckObject<LTBezierPath>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Vector3 o = obj.point(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int place2d(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LTBezierPath obj = (LTBezierPath)ToLua.CheckObject<LTBezierPath>(L, 1);
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.place2d(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int placeLocal2d(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LTBezierPath obj = (LTBezierPath)ToLua.CheckObject<LTBezierPath>(L, 1);
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.placeLocal2d(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int place(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				LTBezierPath obj = (LTBezierPath)ToLua.CheckObject<LTBezierPath>(L, 1);
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
				obj.place(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				LTBezierPath obj = (LTBezierPath)ToLua.CheckObject<LTBezierPath>(L, 1);
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
				UnityEngine.Vector3 arg2 = ToLua.ToVector3(L, 4);
				obj.place(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LTBezierPath.place");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int placeLocal(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				LTBezierPath obj = (LTBezierPath)ToLua.CheckObject<LTBezierPath>(L, 1);
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
				obj.placeLocal(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				LTBezierPath obj = (LTBezierPath)ToLua.CheckObject<LTBezierPath>(L, 1);
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
				UnityEngine.Vector3 arg2 = ToLua.ToVector3(L, 4);
				obj.placeLocal(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LTBezierPath.placeLocal");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getRationInOneRange(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LTBezierPath obj = (LTBezierPath)ToLua.CheckObject<LTBezierPath>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float o = obj.getRationInOneRange(arg0);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int gizmoDraw(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				LTBezierPath obj = (LTBezierPath)ToLua.CheckObject<LTBezierPath>(L, 1);
				obj.gizmoDraw();
				return 0;
			}
			else if (count == 2)
			{
				LTBezierPath obj = (LTBezierPath)ToLua.CheckObject<LTBezierPath>(L, 1);
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
				obj.gizmoDraw(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LTBezierPath.gizmoDraw");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pts(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LTBezierPath obj = (LTBezierPath)o;
			UnityEngine.Vector3[] ret = obj.pts;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pts on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_length(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LTBezierPath obj = (LTBezierPath)o;
			float ret = obj.length;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index length on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_orientToPath(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LTBezierPath obj = (LTBezierPath)o;
			bool ret = obj.orientToPath;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orientToPath on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_orientToPath2d(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LTBezierPath obj = (LTBezierPath)o;
			bool ret = obj.orientToPath2d;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orientToPath2d on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_distance(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LTBezierPath obj = (LTBezierPath)o;
			float ret = obj.distance;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index distance on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_pts(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LTBezierPath obj = (LTBezierPath)o;
			UnityEngine.Vector3[] arg0 = ToLua.CheckStructArray<UnityEngine.Vector3>(L, 2);
			obj.pts = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pts on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_length(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LTBezierPath obj = (LTBezierPath)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.length = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index length on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_orientToPath(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LTBezierPath obj = (LTBezierPath)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.orientToPath = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orientToPath on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_orientToPath2d(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LTBezierPath obj = (LTBezierPath)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.orientToPath2d = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orientToPath2d on a nil value");
		}
	}
}

